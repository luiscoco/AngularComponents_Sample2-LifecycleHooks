{"ast":null,"code":"import { LoggerService } from './logger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./logger.service\";\nimport * as i3 from \"@angular/common\";\nfunction AfterContentComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.comment, \" \");\n  }\n}\nconst _c0 = [\"*\"];\nfunction AfterContentParentComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"after-content\");\n    i0.ɵɵelement(2, \"app-child\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AfterContentParentComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(msg_r2);\n  }\n}\n//////////////////\nexport let ChildComponent = /*#__PURE__*/(() => {\n  class ChildComponent {\n    constructor() {\n      this.hero = 'Magneta';\n    }\n  }\n  ChildComponent.ɵfac = function ChildComponent_Factory(t) {\n    return new (t || ChildComponent)();\n  };\n  ChildComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChildComponent,\n    selectors: [[\"app-child\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngModel\", \"ngModelChange\"]],\n    template: function ChildComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ChildComponent_Template_input_ngModelChange_0_listener($event) {\n          return ctx.hero = $event;\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.hero);\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    encapsulation: 2\n  });\n  return ChildComponent;\n})();\n//////////////////////\nexport let AfterContentComponent = /*#__PURE__*/(() => {\n  class AfterContentComponent {\n    constructor(logger) {\n      this.logger = logger;\n      this.prevHero = '';\n      this.comment = '';\n      this.logIt('AfterContent constructor');\n    }\n    ngAfterContentInit() {\n      // contentChild is set after the content has been initialized\n      this.logIt('AfterContentInit');\n      this.doSomething();\n    }\n    ngAfterContentChecked() {\n      // contentChild is updated after the content has been checked\n      if (this.prevHero === this.contentChild.hero) {\n        this.logIt('AfterContentChecked (no change)');\n      } else {\n        this.prevHero = this.contentChild.hero;\n        this.logIt('AfterContentChecked');\n        this.doSomething();\n      }\n    }\n    // This surrogate for real business logic sets the `comment`\n    doSomething() {\n      this.comment = this.contentChild.hero.length > 10 ? `That's a long name` : '';\n    }\n    logIt(method) {\n      let child = this.contentChild;\n      let message = `${method}: ${child ? child.hero : 'no'} child content`;\n      this.logger.log(message);\n    }\n  }\n  AfterContentComponent.ɵfac = function AfterContentComponent_Factory(t) {\n    return new (t || AfterContentComponent)(i0.ɵɵdirectiveInject(i2.LoggerService));\n  };\n  AfterContentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AfterContentComponent,\n    selectors: [[\"after-content\"]],\n    contentQueries: function AfterContentComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, ChildComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentChild = _t.first);\n      }\n    },\n    ngContentSelectors: _c0,\n    decls: 6,\n    vars: 1,\n    consts: [[\"class\", \"comment\", 4, \"ngIf\"], [1, \"comment\"]],\n    template: function AfterContentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtext(1, \"-- projected content begins --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵtext(4, \"-- projected content ends --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, AfterContentComponent_p_5_Template, 2, 1, \"p\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.comment);\n      }\n    },\n    dependencies: [i3.NgIf],\n    encapsulation: 2\n  });\n  return AfterContentComponent;\n})();\n//////////////\nexport let AfterContentParentComponent = /*#__PURE__*/(() => {\n  class AfterContentParentComponent {\n    constructor(logger) {\n      this.logger = logger;\n      this.show = true;\n    }\n    reset() {\n      this.logger.clear();\n      // quickly remove and reload AfterContentComponent which recreates it\n      this.show = false;\n      this.logger.tick_then(() => this.show = true);\n    }\n  }\n  AfterContentParentComponent.ɵfac = function AfterContentParentComponent_Factory(t) {\n    return new (t || AfterContentParentComponent)(i0.ɵɵdirectiveInject(i2.LoggerService));\n  };\n  AfterContentParentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AfterContentParentComponent,\n    selectors: [[\"after-content-parent\"]],\n    features: [i0.ɵɵProvidersFeature([LoggerService])],\n    decls: 10,\n    vars: 2,\n    consts: [[1, \"parent\"], [4, \"ngIf\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function AfterContentParentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"AfterContent\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, AfterContentParentComponent_div_3_Template, 3, 0, \"div\", 1);\n        i0.ɵɵelementStart(4, \"h4\");\n        i0.ɵɵtext(5, \"-- AfterContent Logs --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\")(7, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AfterContentParentComponent_Template_button_click_7_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(8, \"Reset\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, AfterContentParentComponent_div_9_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.show);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.logger.logs);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, AfterContentComponent, ChildComponent],\n    styles: [\".parent[_ngcontent-%COMP%]{background:burlywood}\"]\n  });\n  return AfterContentParentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}