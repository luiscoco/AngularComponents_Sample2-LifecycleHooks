{"ast":null,"code":"import { LoggerService } from './logger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./spy.directive\";\nimport * as i3 from \"./logger.service\";\nfunction MyCounterComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chg_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(chg_r1);\n  }\n}\nfunction CounterParentComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(msg_r1);\n  }\n}\nexport let MyCounterComponent = /*#__PURE__*/(() => {\n  class MyCounterComponent {\n    constructor() {\n      this.changeLog = [];\n    }\n    ngOnChanges(changes) {\n      // Empty the changeLog whenever counter goes to zero\n      // hint: this is a way to respond programmatically to external value changes.\n      if (this.counter === 0) {\n        this.changeLog = [];\n      }\n      // A change to `counter` is the only change we care about\n      let chng = changes['counter'];\n      let cur = chng.currentValue;\n      let prev = JSON.stringify(chng.previousValue); // first time is {}; after is integer\n      this.changeLog.push(`counter: currentValue = ${cur}, previousValue = ${prev}`);\n    }\n  }\n  MyCounterComponent.ɵfac = function MyCounterComponent_Factory(t) {\n    return new (t || MyCounterComponent)();\n  };\n  MyCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MyCounterComponent,\n    selectors: [[\"app-counter\"]],\n    inputs: {\n      counter: \"counter\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"counter\"], [\"mySpy\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"mySpy\", \"\"]],\n    template: function MyCounterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementStart(2, \"h5\");\n        i0.ɵɵtext(3, \"-- Counter Change Log --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, MyCounterComponent_div_4_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" Counter = \", ctx.counter, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.changeLog);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.SpyDirective],\n    styles: [\".counter[_ngcontent-%COMP%]{background:LightYellow;padding:8px;margin-top:8px}\"]\n  });\n  return MyCounterComponent;\n})();\nexport let CounterParentComponent = /*#__PURE__*/(() => {\n  class CounterParentComponent {\n    constructor(logger) {\n      this.spyLog = [];\n      this.logger = logger;\n      this.spyLog = logger.logs;\n      this.reset();\n    }\n    updateCounter() {\n      this.value += 1;\n      this.logger.tick();\n    }\n    reset() {\n      this.logger.log('-- reset --');\n      this.value = 0;\n      this.logger.tick();\n    }\n  }\n  CounterParentComponent.ɵfac = function CounterParentComponent_Factory(t) {\n    return new (t || CounterParentComponent)(i0.ɵɵdirectiveInject(i3.LoggerService));\n  };\n  CounterParentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CounterParentComponent,\n    selectors: [[\"counter-parent\"]],\n    features: [i0.ɵɵProvidersFeature([LoggerService])],\n    decls: 11,\n    vars: 2,\n    consts: [[1, \"parent\"], [3, \"click\"], [3, \"counter\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function CounterParentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Counter Spy\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CounterParentComponent_Template_button_click_3_listener() {\n          return ctx.updateCounter();\n        });\n        i0.ɵɵtext(4, \"Update counter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CounterParentComponent_Template_button_click_5_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(6, \"Reset Counter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"app-counter\", 2);\n        i0.ɵɵelementStart(8, \"h4\");\n        i0.ɵɵtext(9, \"-- Spy Lifecycle Hook Log --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, CounterParentComponent_div_10_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"counter\", ctx.value);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.spyLog);\n      }\n    },\n    dependencies: [i1.NgForOf, MyCounterComponent],\n    styles: [\".parent[_ngcontent-%COMP%]{background:gold}\"]\n  });\n  return CounterParentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}