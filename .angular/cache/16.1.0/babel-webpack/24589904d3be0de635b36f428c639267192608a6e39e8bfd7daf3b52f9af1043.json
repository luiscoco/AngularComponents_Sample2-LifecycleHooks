{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction OnChangesComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chg_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(chg_r1);\n  }\n}\nclass Hero {\n  constructor(name) {\n    this.name = name;\n  }\n}\nexport let OnChangesComponent = /*#__PURE__*/(() => {\n  class OnChangesComponent {\n    constructor() {\n      this.changeLog = [];\n    }\n    ngOnChanges(changes) {\n      for (let propName in changes) {\n        let chng = changes[propName];\n        let cur = JSON.stringify(chng.currentValue);\n        let prev = JSON.stringify(chng.previousValue);\n        this.changeLog.push(`${propName}: currentValue = ${cur}, previousValue = ${prev}`);\n      }\n    }\n    reset() {\n      this.changeLog = [];\n    }\n  }\n  OnChangesComponent.ɵfac = function OnChangesComponent_Factory(t) {\n    return new (t || OnChangesComponent)();\n  };\n  OnChangesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OnChangesComponent,\n    selectors: [[\"on-changes\"]],\n    inputs: {\n      hero: \"hero\",\n      power: \"power\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 6,\n    vars: 3,\n    consts: [[1, \"hero\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function OnChangesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h4\");\n        i0.ɵɵtext(4, \"-- Change Log --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, OnChangesComponent_div_5_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", ctx.hero.name, \" can \", ctx.power, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.changeLog);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\".hero[_ngcontent-%COMP%]{background:LightYellow;padding:8px;margin-top:8px}\", \"p[_ngcontent-%COMP%]{background:Yellow;padding:8px;margin-top:8px}\"]\n  });\n  return OnChangesComponent;\n})();\nexport let OnChangesParentComponent = /*#__PURE__*/(() => {\n  class OnChangesParentComponent {\n    constructor() {\n      this.title = 'OnChanges';\n      this.reset();\n    }\n    reset() {\n      // new Hero object every time; triggers onChanges\n      this.hero = new Hero('Windstorm');\n      // setting power only triggers onChanges if this value is different\n      this.power = 'sing';\n      if (this.childView) {\n        this.childView.reset();\n      }\n    }\n  }\n  OnChangesParentComponent.ɵfac = function OnChangesParentComponent_Factory(t) {\n    return new (t || OnChangesParentComponent)();\n  };\n  OnChangesParentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OnChangesParentComponent,\n    selectors: [[\"on-changes-parent\"]],\n    viewQuery: function OnChangesParentComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(OnChangesComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childView = _t.first);\n      }\n    },\n    decls: 18,\n    vars: 5,\n    consts: [[1, \"parent\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [3, \"hero\", \"power\"]],\n    template: function OnChangesParentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"td\");\n        i0.ɵɵtext(6, \"Power: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"td\")(8, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function OnChangesParentComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.power = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"tr\")(10, \"td\");\n        i0.ɵɵtext(11, \"Hero.name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"td\")(13, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function OnChangesParentComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.hero.name = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(14, \"p\")(15, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function OnChangesParentComponent_Template_button_click_15_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(16, \"Reset Log\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"on-changes\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.power);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.hero.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hero\", ctx.hero)(\"power\", ctx.power);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, OnChangesComponent],\n    styles: [\".parent[_ngcontent-%COMP%]{background:Lavender}\"]\n  });\n  return OnChangesParentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}