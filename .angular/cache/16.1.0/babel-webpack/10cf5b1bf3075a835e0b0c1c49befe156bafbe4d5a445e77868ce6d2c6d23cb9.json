{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction DoCheckComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chg_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(chg_r1);\n  }\n}\nclass Hero {\n  constructor(name) {\n    this.name = name;\n  }\n}\nexport let DoCheckComponent = /*#__PURE__*/(() => {\n  class DoCheckComponent {\n    constructor() {\n      this.changeDetected = false;\n      this.changeLog = [];\n      this.oldHeroName = '';\n      this.oldPower = '';\n      this.oldLogLength = 0;\n      this.noChangeCount = 0;\n    }\n    ngDoCheck() {\n      if (this.hero.name !== this.oldHeroName) {\n        this.changeDetected = true;\n        this.changeLog.push(`DoCheck: Hero name changed to \"${this.hero.name}\" from \"${this.oldHeroName}\"`);\n        this.oldHeroName = this.hero.name;\n      }\n      if (this.power !== this.oldPower) {\n        this.changeDetected = true;\n        this.changeLog.push(`DoCheck: Power changed to \"${this.power}\" from \"${this.oldPower}\"`);\n        this.oldPower = this.power;\n      }\n      if (this.changeDetected) {\n        this.noChangeCount = 0;\n      } else {\n        // log that hook was called when there was no relevant change.\n        let count = this.noChangeCount += 1;\n        let noChangeMsg = `DoCheck called ${count}x when no change to hero or power`;\n        if (count === 1) {\n          // add new \"no change\" message\n          this.changeLog.push(noChangeMsg);\n        } else {\n          // update last \"no change\" message\n          this.changeLog[this.changeLog.length - 1] = noChangeMsg;\n        }\n      }\n      this.changeDetected = false;\n    }\n    reset() {\n      this.changeDetected = true;\n      this.changeLog = [];\n    }\n  }\n  DoCheckComponent.ɵfac = function DoCheckComponent_Factory(t) {\n    return new (t || DoCheckComponent)();\n  };\n  DoCheckComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoCheckComponent,\n    selectors: [[\"do-check\"]],\n    inputs: {\n      hero: \"hero\",\n      power: \"power\"\n    },\n    decls: 6,\n    vars: 3,\n    consts: [[1, \"hero\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function DoCheckComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h4\");\n        i0.ɵɵtext(4, \"-- Change Log --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, DoCheckComponent_div_5_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", ctx.hero.name, \" can \", ctx.power, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.changeLog);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\".hero[_ngcontent-%COMP%]{background:LightYellow;padding:8px;margin-top:8px}\", \"p[_ngcontent-%COMP%]{background:Yellow;padding:8px;margin-top:8px}\"]\n  });\n  return DoCheckComponent;\n})();\nexport let DoCheckParentComponent = /*#__PURE__*/(() => {\n  class DoCheckParentComponent {\n    constructor() {\n      this.title = 'DoCheck';\n      this.reset();\n    }\n    reset() {\n      this.hero = new Hero('Windstorm');\n      this.power = 'sing';\n      if (this.childView) {\n        this.childView.reset();\n      }\n    }\n  }\n  DoCheckParentComponent.ɵfac = function DoCheckParentComponent_Factory(t) {\n    return new (t || DoCheckParentComponent)();\n  };\n  DoCheckParentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoCheckParentComponent,\n    selectors: [[\"do-check-parent\"]],\n    viewQuery: function DoCheckParentComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DoCheckComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childView = _t.first);\n      }\n    },\n    decls: 18,\n    vars: 5,\n    consts: [[1, \"parent\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [3, \"hero\", \"power\"]],\n    template: function DoCheckParentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"td\");\n        i0.ɵɵtext(6, \"Power: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"td\")(8, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function DoCheckParentComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.power = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"tr\")(10, \"td\");\n        i0.ɵɵtext(11, \"Hero.name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"td\")(13, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function DoCheckParentComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.hero.name = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(14, \"p\")(15, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function DoCheckParentComponent_Template_button_click_15_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(16, \"Reset Log\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"do-check\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.power);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.hero.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hero\", ctx.hero)(\"power\", ctx.power);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, DoCheckComponent],\n    styles: [\".parent[_ngcontent-%COMP%]{background:Lavender}\"]\n  });\n  return DoCheckParentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}